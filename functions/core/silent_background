#!/bin/sh
# functions/core/silent_background
# Description: Run commands in background without job completion messages
# Usage: silent_background <command> [args...]
# Compatibility: sh, bash, zsh
#
# This function executes commands in the background while suppressing the job
# completion messages that would normally appear in interactive shells. It uses
# shell-specific techniques to achieve silent background execution across
# different shell environments.
#
# Problem Solved:
# When running commands in the background with '&', interactive shells often
# display job status messages like:
#   [1]+  Done                    some_command
# This function prevents these messages while maintaining background execution.
#
# Implementation Details:
#
# ZSH Approach:
# - Uses 'setopt local_options no_notify no_monitor' to disable job monitoring
# - 'no_notify': Prevents immediate job status reporting
# - 'no_monitor': Disables job control monitoring for this function scope
# - 'local_options': Ensures settings are reverted when function exits
#
# BASH Approach:
# - Uses file descriptor manipulation: { 2>&3 "$@"& } 3>&2 2>/dev/null
# - Temporarily redirects stderr (fd 2) to fd 3
# - Runs command in background with stderr going to /dev/null
# - Restores stderr after command is backgrounded
#
# Fallback Approach (other shells):
# - Simple backgrounding with '&' for unknown/minimal shells
# - Basic functionality without message suppression
#
# Universal Cleanup:
# - Uses 'disown' to remove completed jobs from job table
# - Suppresses disown errors if job already completed
#
# Usage Examples:
#   silent_background sleep 10
#   silent_background long_running_process --with-args
#   silent_background ./script.sh input.txt
#
# References:
# - ZSH: https://superuser.com/a/1285272/365890
# - BASH: https://stackoverflow.com/a/27340076/5353461
#
# Author: Jeff Putsch
# Part of: dotfiles functions system
# Location: functions/core/silent_background

# Run the command given by "$@" in the background
silent_background() {
  if [[ -n $ZSH_VERSION ]]; then  # zsh:  https://superuser.com/a/1285272/365890
    setopt local_options no_notify no_monitor
    # We'd use &| to background and disown, but incompatible with bash, so:
    "$@" &
  elif [[ -n $BASH_VERSION ]]; then  # bash: https://stackoverflow.com/a/27340076/5353461
    { 2>&3 "$@"& } 3>&2 2>/dev/null
  else  # Unknownness - just background it
    "$@" &
  fi
  disown &>/dev/null  # Close STD{OUT,ERR} to prevent whine if job has already completed
}