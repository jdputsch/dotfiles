# Get the location of this dotfile collection
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink,
                                                 # we need to resolve it relative to the
                                                 # path where the symlink file was located
done
export DOTBASH="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && /bin/pwd )"
export DOTFILES=${DOTBASH%/*}
export DOTZSH="${DOTFILES}/zsh"

# Store the original path in DOTBASH_ORIG_PATH if not already set
if [[ -z "${DOTBASH_ORIG_PATH}" ]]; then
    export DOTBASH_ORIG_PATH=${PATH}
fi

# Fix umask to a sane value if needed
if [[ $(umask) =~ ^[0]+$ ]]; then
    umask 022
fi

# Emulate zsh and put environment settings in a $HOME/.bashenv file, loading it
# before we do much else
[[ -f ${HOME}/.bashenv ]] && . ${HOME}/.bashenv

# If on WSL, set window title to reflect Linux flavor..
if [[ -n ${PS1} ]] && grep -qi Microsoft /proc/version 2>/dev/null; then
    echo -en "\033]0;${WSL_DISTRO_NAME%%-*}\a"
fi

# Look for a suitable zsh
ZSH=""
if ! type zsh >/dev/null 2>&1; then
    if [ -x ${HOME}/apps/zsh/5.7.1/linux/7/bin/zsh ]; then
        ZSH=${HOME}/apps/zsh/5.7.1/linux/7/bin/zsh
    elif [ -x ${HOME}/adi_modules/zsh/.default ] \
        && [ -x ${HOME}/apps/zsh/$(${HOME}/adi_modules/zsh/.default)/linux/${MAJOR_REV}/bin/zsh ]; then
        ZSH=${HOME}/apps/zsh/$(${HOME}/adi_modules/zsh/.default)/linux/${MAJOR_REV}/bin/zsh
    elif [ -x ${HOME}/${PLAT}/bin/zsh ]; then
        ZSH=${HOME}/${PLAT}/bin/zsh
    elif [ -x /bin/zsh ]; then
        ZSH=/bin/zsh
    fi
else
    ZSH=$(type -p zsh)
fi

## We just switch to zsh for login shells if it is available.
if [[ -n ${PS1} ]] && [[ -n "${ZSH}" ]] && [[ -z "${VSCODE}" ]] \
    && ( shopt -q login_shell \
        || [[ $(ps -o comm= $PPID) = *terminal ]] \
        || [[ $(ps -o comm= $PPID) = konsole ]] \
        || [[ $(ps -o comm= $PPID) = code ]] \
        || [[ -n "${VSCODE_IPC_HOOK_CLI}" ]] \
    ); then
    export SHELL=${ZSH}
    exec ${SHELL} -l
fi

# If modules is available, use it, else manage key paths here
if [ -f /usr/cadtools/bin/modules.dir/Shrc ]; then
    . /usr/cadtools/bin/modules.dir/Shrc
else
    # add platform specific personal bin directory to beginning of path
    if [ -d ${HOME}/${PLAT}/bin ] \
        && [[ ":$PATH:" != *":${HOME}/${PLAT}/bin:"* ]];  then
        PATH="${HOME}/${PLAT}/bin${PATH:+":$PATH"}"
    fi
fi

## If we're here, we're staying in bash. Set up the environment.


export COLUMNS="120"

export PATH="$PATH:/home/jputsch/apps/acli/10.2.0/linux/7"

# Enable the subsequent settings only in interactive sessions
case $- in
  *i*) ;;
    *) return;;
esac
